package com.hiberus.headbook.model;
// default package
// Generated Dec 18, 2018 5:12:43 PM by Hibernate Tools 5.3.6.Final

import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Transient;


/**
 * User generated by hbm2java
 */
@Entity
public class Usuario implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6628009124380846046L;
	
	private UUID id;
	private String name;
	private String surname;
	private String avatar;
	private String nombreCompleto;
	private Set<Post> posts = new HashSet<Post>(0);
	private Likes likes;
	
	public Usuario() {
	}

	
	public Usuario(UUID id, String avatar) {
		this.id = id;
		this.avatar = avatar;
	}

	public Usuario(UUID id, String name, String surname, String avatar, Set<Post> posts) {
		this.id = id;
		this.name = name;
		this.surname = surname;
		this.avatar = avatar;
		this.posts = posts;
	}

	@Id
	@GeneratedValue
	public UUID getId() {
		return this.id;
	}

	public void setId(UUID id) {
		this.id = id;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Transient 
	public String getNombreCompleto() {
		nombreCompleto=name+" "+surname;
		return nombreCompleto;
	}


	public void setNombreCompleto(String nombreCompleto) {
		this.nombreCompleto = nombreCompleto;
	}


	public String getAvatar() {
		return this.avatar;
	}

	public void setAvatar(String avatar) {
		this.avatar = avatar;
	}

	@OneToMany(mappedBy = "usuario", fetch = FetchType.LAZY,
	        cascade = CascadeType.ALL,
	        orphanRemoval = true)
	public Set<Post> getPosts() {
		return this.posts;
	}

	public void setPosts(Set<Post> posts) {
		this.posts = posts;
	}

	
	@OneToOne(optional=true,fetch = FetchType.LAZY)
	@JoinColumns({
		@JoinColumn(name="likesid.usuario", referencedColumnName="usuario", updatable=false, insertable=false),
	    @JoinColumn(name="likesid.post", referencedColumnName="post", updatable=false, insertable=false),
	})
	public Likes getLikes() {
		return likes;
	}


	public void setLikes(Likes likes) {
		if (likes == null) {
            if (this.likes != null) {
                this.likes.setUsuario(null);
            }
        }
        else {
        	likes.setUsuario(this);
        }
		this.likes = likes;
	}
	
	public void addPost(Post post) {
		this.posts.add(post);
		post.setUsuario(this);
	}
	
	



}
